new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
new_mat
rot_mat
new_mat
new_mat
new_mat
fit_orthogonal$loadings
new_mat
fit_orthogonal$loadings[]
source("rotation_functions.R")
get_angle(fit_orthogonal$rot.mat)
get_angle(fit_orthogonal$rot.mat[1,])
get_angle(fit_orthogonal$rot.mat[,1])
(matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2) *180)/pi
(get_angle(fit_orthogonal$rot.mat[,1])*180)/pi()
(get_angle(fit_orthogonal$rot.mat[,1])*180)/pi
ang <- 38.8553
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
print(c(colSums(new_mat**2),ang))
for (ang in seq(40,50,1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
print(c(colSums(new_mat**2),ang))
Sys.sleep(0.1)
}
for (ang in seq(30,40,1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
print(c(colSums(new_mat**2),ang))
Sys.sleep(0.1)
}
for (ang in seq(30,50,1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
print(c(colSums(new_mat**2),ang))
Sys.sleep(0.1)
}
ang <- 45for (ang in seq(30,50,1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
print(c(colSums(new_mat**2),ang))
Sys.sleep(0.1)
}
ang <- 45
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
plot(fit_orthogonal$loadings[], ylim = lim, xlim = lim)
abline(v = 0, h = 0)
fit_orthogonal <- fa(rdata[items], nfactors = 2, fm = "pa", rotate = "varimax", ... normalize = F)
fit_orthogonal <- fa(rdata[items], nfactors = 2, fm = "pa", rotate = "varimax", normalize = F)
plot(fit_orthogonal$loadings[], ylim = lim, xlim = lim)
abline(v = 0, h = 0)
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
pca_iris        <- fit_no_rotation
rawLoadings     <- pca_iris$rotation[,1:ncomp] %*% diag(pca_iris$sdev, ncomp, ncomp)
pca_iris        <- fit_no_rotation
rawLoadings     <- pca_iris$rotation[,1:2] %*% diag(pca_iris$sdev, 2, 2)
?varimax
varimax(fit_no_rotation$loadings[])
fit_orthogonal$loadings[]
varimax(fit_no_rotation$loadings[])[]
fit_orthogonal$loadings[]
varimax(fit_no_rotation$loadings[])
varimax(fit_no_rotation$loadings[],normalize = FALSE)
new_mat <- indata %*% rot_mat
newmat
new_mat
varimax(fit_no_rotation$loadings[],normalize = T)
p <- 2
TT <- diag(indata)
d <- 0
for(i in 1L:1000L) {
z <- x %*% TT
B  <- t(x) %*% (z^3 - z %*% diag(drop(rep(1, p) %*% z^2))/p)
sB <- La.svd(B)
TT <- sB$u %*% sB$vt
dpast <- d
d <- sum(sB$d)
if(d < dpast * (1 + eps)) break
}
TT
indata
TT <- diag(ncol(indata))
TT
indata
x <- fit_no_rotation$loadings
x
x <- fit_no_rotation$loadings[]
x
nc <- ncol(x)
p <- nrow(x)
TT <- diag(nc)
d <- 0
for(i in 1L:1000L) {
z <- x %*% TT
B  <- t(x) %*% (z^3 - z %*% diag(drop(rep(1, p) %*% z^2))/p)
sB <- La.svd(B)
TT <- sB$u %*% sB$vt
dpast <- d
d <- sum(sB$d)
if(d < dpast * (1 + eps)) break
}
eps <- .00001
for(i in 1L:1000L) {
z <- x %*% TT
B  <- t(x) %*% (z^3 - z %*% diag(drop(rep(1, p) %*% z^2))/p)
sB <- La.svd(B)
TT <- sB$u %*% sB$vt
dpast <- d
d <- sum(sB$d)
if(d < dpast * (1 + eps)) break
}
z <- x %*% TT
z
x <- fit_no_rotation$loadings[]
nc <- ncol(x)
p <- nrow(x)
TT <- diag(nc)
p
TT
x %*% TT
TT
x
t(x) %*% (z^3 - z %*% diag(drop(rep(1, p) %*% z^2))/p)
B  <- t(x) %*% (z^3 - z %*% diag(drop(rep(1, p) %*% z^2))/p)
La.svd(B)
TT <- sB$u %*% sB$vt
TT
dpast <- d
d <- sum(sB$d)
d
sb
sB
B
?La.svd
La.svd
La.svd(rot_mat)
for(i in 1L:1000L) {
z <- x %*% TT
B  <- t(x) %*% (z^3 - z %*% diag(drop(rep(1, p) %*% z^2))/p)
sB <- La.svd(B)
TT <- sB$u %*% sB$vt
dpast <- d
print(d)
d <- sum(sB$d)
if(d < dpast * (1 + eps)) break
}
d <- 0
for(i in 1L:1000L) {
z <- x %*% TT
B  <- t(x) %*% (z^3 - z %*% diag(drop(rep(1, p) %*% z^2))/p)
sB <- La.svd(B)
TT <- sB$u %*% sB$vt
dpast <- d
print(d)
d <- sum(sB$d)
if(d < dpast * (1 + eps)) break
}
nc <- ncol(x)
if(nc < 2) return(x)
if(normalize) {
sc <- sqrt(drop(apply(x, 1L, function(x) sum(x^2))))
x <- x/sc
}
p <- nrow(x)
TT <- diag(nc)
d <- 0
for(i in 1L:1000L) {
z <- x %*% TT
B  <- t(x) %*% (z^3 - z %*% diag(drop(rep(1, p) %*% z^2))/p)
sB <- La.svd(B)
TT <- sB$u %*% sB$vt
dpast <- d
print(d)
d <- sum(sB$d)
if(d < dpast * (1 + eps)) break
}
B
rowSums(fit_no_rotation$loadings**2)
fit_no_rotation$loadings / rowSums(fit_no_rotation$loadings**2)
fit_no_rotation$loadings[] / rowSums(fit_no_rotation$loadings**2)
colSums((fit_no_rotation$loadings[] / rowSums(fit_no_rotation$loadings**2))**2)
for (ang in seq(30,50,1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
print(c(colSums((new_mat / rowSums(newmat)**2))**2,ang))
Sys.sleep(0.1)
}
print(c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
for (ang in seq(30,50,1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
print(c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
Sys.sleep(0.1)
}
for (ang in seq(0,360,10)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
print(c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
Sys.sleep(0.1)
}
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot[1]/kvot[2]
print(kvot[1]/kvot[2], ang)
kvot <- kvot[1]/kvot[2]
for (ang in seq(0,360,10)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1]/kvot[2]
print(c(kvot), ang)
Sys.sleep(0.1)
}
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1]/kvot[2]
print(c(kvot), ang)
kvot
ang
for (ang in seq(0,360,10)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1]/kvot[2]
print(c(kvot), ang))
Sys.sleep(0.1)
}
for (ang in seq(0,360,10)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1]/kvot[2]
print(c(kvot, ang))
Sys.sleep(0.1)
}
for (ang in seq(20,40,1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1]/kvot[2]
print(c(kvot, ang))
Sys.sleep(0.1)
}
for (ang in seq(20,40,1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
print(c(kvot, ang))
Sys.sleep(0.1)
}
finddd <- c()
for (ang in seq(0,360,.1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
finddd <- list(c(finddd,kvot, ang))
#Sys.sleep(0.1)
}
min(find)
min(finddd)
finddd
finddd <- c()
ang <- 45
for (ang in seq(0,360,.1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
finddd <- c(finddd,list(kvot, ang))
#Sys.sleep(0.1)
}
finddd
min(finddd)
list(kvot, ang)
c(kvot, ang)
finddd <- c(finddd,c(kvot, ang))
finddd <- c()
ang <- 45
for (ang in seq(0,360,.1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
finddd <- c(finddd,c(kvot, ang))
#Sys.sleep(0.1)
}
finddd
data_rot <- data.frame()
data_rot <- data.frame()
for (ang in seq(0,360,.1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
data_rot <- rbind(data_rot kvot, ang)
#Sys.sleep(0.1)
}
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
data_rot <- rbind(data_rot kvot, ang)
data_rot <- data.frame()
for (ang in seq(0,360,.1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
data_rot <- rbind(data_rot, kvot, ang)
#Sys.sleep(0.1)
}
data_rot
data_rot <- data.frame()
for (ang in seq(0,360,10)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
data_rot <- rbind(data_rot, kvot, ang)
#Sys.sleep(0.1)
}
as.data.frame(c(kvot, ang))
as.data.frame(matrix(c(kvot, ang)),2)
as.data.frame(matrix(c(kvot, ang)),1)
as.data.frame(matrix(c(kvot, ang),2))
matrix(c(kvot, ang),2)
matrix(c(kvot, ang),ncol = 2)
as.data.frame(matrix(c(kvot, ang),ncol = 2))
data_rot <- data.frame()
for (ang in seq(0,360,10)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
for_bind <- as.data.frame(matrix(c(kvot, ang),ncol = 2))
data_rot <- rbind(data_rot, for_bind)
#Sys.sleep(0.1)
}
data_rot
min(data[,2])
min(data[1,])
min(data)
min(data_rot)
min(data_rot[1])
min(data_rot[1,])
min(data_rot[2,])
min(abs(data_rot[2,]))
min(abs(data_rot[1,]))
data_rot[1,]
data_rot[,1]
min(abs(data_rot[,1]))
round(data_rot[,1],3)
sort(round(data_rot[,1],3))
min(abs(data_rot[,1]))
for (ang in seq(0,360,0.001)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
for_bind <- as.data.frame(matrix(c(kvot, ang),ncol = 2))
data_rot <- rbind(data_rot, for_bind)
#Sys.sleep(0.1)
}
for (ang in seq(0,360,0.1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
#abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
for_bind <- as.data.frame(matrix(c(kvot, ang),ncol = 2))
data_rot <- rbind(data_rot, for_bind)
#Sys.sleep(0.1)
}
min(abs(data_rot[,1]))
sort(round(data_rot[,1],3))
min(abs(data_rot[,1]))
data[data[,1] == min(abs(data_rot[,1]))]
data[data == min(abs(data_rot[,1]))]
data[data[,1] == min(abs(data_rot[,1]))]
for (ang in seq(38,39,0.1)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
#abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
print(c(kvot, ang))
for_bind <- as.data.frame(matrix(c(kvot, ang),ncol = 2))
data_rot <- rbind(data_rot, for_bind)
#Sys.sleep(0.1)
}
min(abs(data_rot[,1]))
data_rot <- data.frame()
for (ang in seq(38.8,39,0.01)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
#abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
print(c(kvot, ang))
for_bind <- as.data.frame(matrix(c(kvot, ang),ncol = 2))
data_rot <- rbind(data_rot, for_bind)
#Sys.sleep(0.1)
}
for (ang in seq(38.9,39,0.001)){
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
#plot(new_mat, ylim = lim, xlim = lim)
#abline(v = 0, h = 0)
kvot <- (c(colSums((new_mat / rowSums(new_mat)**2))**2,ang))
kvot <- kvot[1] - kvot[2]
print(c(kvot, ang))
for_bind <- as.data.frame(matrix(c(kvot, ang),ncol = 2))
data_rot <- rbind(data_rot, for_bind)
#Sys.sleep(0.1)
}
ang <- 38.9080
radian <- (ang*pi)/180
rot_mat <- matrix(c(cos(radian), sin(radian), -sin(radian), cos(radian)),2)
new_mat <- indata %*% rot_mat
plot(new_mat, ylim = lim, xlim = lim)
abline(v = 0, h = 0)
plot(fit_orthogonal$loadings[], ylim = lim, xlim = lim)
abline(v = 0, h = 0)
